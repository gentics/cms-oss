<?xml version="1.0" encoding="UTF-8"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.gentics</groupId>
		<artifactId>cms-oss</artifactId>
		<version>6.2.0-SNAPSHOT</version>
	</parent>

	<groupId>com.gentics.cms-oss</groupId>
	<artifactId>cms-integration-tests</artifactId>
	<name>Gentics CMS UI</name>
	<packaging>pom</packaging>
	<description>This is the Module for managing integration tests</description>
	<url>http://www.gentics.com</url>

	<properties>
		<integrationTest.mariadb.image>mariadb</integrationTest.mariadb.image>
		<integrationTest.mariadb.version>10.7</integrationTest.mariadb.version>

		<integrationTest.cms.image>docker.apa-it.at/gentics/cms-oss</integrationTest.cms.image>
		<integrationTest.cms.version>${project.version}</integrationTest.cms.version>

		<integrationTest.mesh.image>docker.apa-it.at/gentics/mesh</integrationTest.mesh.image>
		<integrationTest.mesh.version>${mesh.version}</integrationTest.mesh.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<extensions>true</extensions>

				<configuration>
					<showLogs>mariadb,cms,mesh</showLogs>
					<images>
						<image>
							<alias>mariadb</alias>
							<name>
								${integrationTest.mariadb.image}:${integrationTest.mariadb.version}</name>
							<run>
								<skip>${skip.integration.tests}</skip>
								<cmd>
									<exec>
										<arg>--transaction-isolation=READ-COMMITTED</arg>
										<arg>--binlog-format=ROW</arg>
										<arg>--log-bin=mysqld-bin</arg>
									</exec>
								</cmd>
								<env>
									<MYSQL_DATABASE>node_utf8</MYSQL_DATABASE>
									<MYSQL_USER>node</MYSQL_USER>
									<MYSQL_PASSWORD>node</MYSQL_PASSWORD>
									<MYSQL_ROOT_PASSWORD>finger</MYSQL_ROOT_PASSWORD>
								</env>

								<ports>
									<port>mariadb.port:3306</port>
									<port>3306:3306</port>
								</ports>

								<wait>
									<log>.*socket: '/run/mysqld/mysqld.sock'  port: 3306 .*</log>
									<time>120000</time>
								</wait>
							</run>
						</image>

						<image>
							<alias>cms</alias>
							<name>${integrationTest.cms.image}:${integrationTest.cms.version}</name>

							<run>
								<skip>${skip.integration.tests}</skip>
								<env>
									<NODE_DB_HOST>+${docker.container.mariadb.ip}</NODE_DB_HOST>
									<NODE_DB_USER>root</NODE_DB_USER>
									<NODE_DB_PASSWORD>finger</NODE_DB_PASSWORD>
									<NODE_USER_PASSWORD>node</NODE_USER_PASSWORD>
									<ELASTICSEARCH_ENABLED>false</ELASTICSEARCH_ENABLED>
									<ELASTICSEARCH_URL></ELASTICSEARCH_URL>
									<CONF_FILES>cms</CONF_FILES>
								</env>

								<volumes>
									<bind>
										<volume>
											./test/resources/cms/commands:/cms/scheduler-commands</volume>
											<volume>./test/resources/cms/conf:/cms/conf/cms</volume>
											<volume>./test/resources/cms/ui-conf:/cms/ui-conf</volume>
										</bind>
									</volumes>
									<dependsOn>
									<container>mariadb</container>
								</dependsOn>
								
								<ports>
									<port>cms.port:8080</port>
									<port>8080:8080</port>
								</ports>

								<wait>
									<log>.*runtime - Server started successfully.*</log>
									<time>120000</time>
								</wait>
							</run>
						</image>

						<image>
							<alias>mesh</alias>
							<name>${integrationTest.mesh.image}:${integrationTest.mesh.version}</name>
							<run>
								<skip>${skip.integration.tests}</skip>
								<env>
									<MESH_INITIAL_ADMIN_PASSWORD_FORCE_RESET>false</MESH_INITIAL_ADMIN_PASSWORD_FORCE_RESET>
									<MESH_INITIAL_ADMIN_PASSWORD>admin</MESH_INITIAL_ADMIN_PASSWORD>
									<MESH_ELASTICSEARCH_URL>null</MESH_ELASTICSEARCH_URL>
									<MESH_ELASTICSEARCH_START_EMBEDDED>false</MESH_ELASTICSEARCH_START_EMBEDDED>
									<MESH_ELASTICSEARCH_WAIT_FOR_IDLE>false</MESH_ELASTICSEARCH_WAIT_FOR_IDLE>
									<MESH_ELASTICSEARCH_INCLUDE_BINARY_FIELDS>false</MESH_ELASTICSEARCH_INCLUDE_BINARY_FIELDS>
								</env>

								<ports>
									<port>mesh.port:8100</port>
									<port>8100:8080</port>
								</ports>

								<wait>
									<log>.*Sending startup completed event to \{mesh.startup-complete\}.*</log>
									<time>120000</time>
								</wait>
							</run>
						</image>

					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>