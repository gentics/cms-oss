/* Generated By:JJTree: Do not edit this line. ASTNull.java */

package com.gentics.lib.expressionparser.parser;

import com.gentics.api.lib.expressionparser.ExpressionEvaluator;
import com.gentics.api.lib.expressionparser.ExpressionParserException;
import com.gentics.api.lib.expressionparser.filtergenerator.DatasourceFilter;

public class ASTNull extends LiteralNode {
	public ASTNull(int id) {
		super(id);
	}

	public ASTNull(Parser p, int id) {
		super(p, id);
	}

	protected Object getLiteralValue() {
		return null;
	}

	/* (non-Javadoc)
	 * @see com.gentics.api.lib.expressionparser.EvaluableExpression#allowsNullValues(com.gentics.api.lib.expressionparser.filtergenerator.DatasourceFilter)
	 */
	public boolean allowsNullValues(DatasourceFilter filter) throws ExpressionParserException {
		return true;
	}

	/* (non-Javadoc)
	 * @see com.gentics.api.lib.expressionparser.EvaluableExpression#getExpectedValueType(com.gentics.api.lib.expressionparser.filtergenerator.DatasourceFilter)
	 */
	public int getExpectedValueType(DatasourceFilter filter) throws ExpressionParserException {
		return ExpressionEvaluator.OBJECTTYPE_NULL;
	}
}
