//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-hudson-16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.04.24 at 01:20:30 CEST 
//


package com.gentics.lib.datasource.object.jaxb.impl;

public class AttributetypeImpl implements com.gentics.lib.datasource.object.jaxb.Attributetype, com.sun.xml.bind.JAXBObject, com.gentics.lib.datasource.object.jaxb.impl.runtime.UnmarshallableObject, com.gentics.lib.datasource.object.jaxb.impl.runtime.XMLSerializable, com.gentics.lib.datasource.object.jaxb.impl.runtime.ValidatableObject
{

    protected java.lang.String _ForeignLinkAttribute;
    protected java.lang.Integer _Linkedobjecttype;
    protected java.lang.String _QuickName;
    protected boolean has_Optimized;
    protected boolean _Optimized;
    protected boolean has_Multivalue;
    protected boolean _Multivalue;
    protected java.lang.String _Name;
    protected boolean has_ExcludeVersioning;
    protected boolean _ExcludeVersioning;
    protected java.lang.Integer _Attributetype;
    protected java.lang.String _ForeignLinkAttributeRule;
    protected boolean has_Filesystem;
    protected boolean _Filesystem;
    public final static java.lang.Class version = (com.gentics.lib.datasource.object.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.gentics.lib.datasource.object.jaxb.Attributetype.class);
    }

    public java.lang.String getForeignLinkAttribute() {
        return _ForeignLinkAttribute;
    }

    public void setForeignLinkAttribute(java.lang.String value) {
        _ForeignLinkAttribute = value;
    }

    public boolean isSetForeignLinkAttribute() {
        return (_ForeignLinkAttribute!= null);
    }

    public void unsetForeignLinkAttribute() {
        _ForeignLinkAttribute = null;
    }

    public java.lang.Integer getLinkedobjecttype() {
        if (_Linkedobjecttype == null) {
            return java.lang.Integer.valueOf(com.sun.xml.bind.DatatypeConverterImpl.installHook("0"));
        } else {
            return _Linkedobjecttype;
        }
    }

    public void setLinkedobjecttype(java.lang.Integer value) {
        _Linkedobjecttype = value;
    }

    public boolean isSetLinkedobjecttype() {
        return (_Linkedobjecttype!= null);
    }

    public void unsetLinkedobjecttype() {
        _Linkedobjecttype = null;
    }

    public java.lang.String getQuickName() {
        return _QuickName;
    }

    public void setQuickName(java.lang.String value) {
        _QuickName = value;
    }

    public boolean isSetQuickName() {
        return (_QuickName!= null);
    }

    public void unsetQuickName() {
        _QuickName = null;
    }

    public boolean isOptimized() {
        if (!has_Optimized) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
        } else {
            return _Optimized;
        }
    }

    public void setOptimized(boolean value) {
        _Optimized = value;
        has_Optimized = true;
    }

    public boolean isSetOptimized() {
        return has_Optimized;
    }

    public void unsetOptimized() {
        has_Optimized = false;
    }

    public boolean isMultivalue() {
        if (!has_Multivalue) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
        } else {
            return _Multivalue;
        }
    }

    public void setMultivalue(boolean value) {
        _Multivalue = value;
        has_Multivalue = true;
    }

    public boolean isSetMultivalue() {
        return has_Multivalue;
    }

    public void unsetMultivalue() {
        has_Multivalue = false;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public boolean isSetName() {
        return (_Name!= null);
    }

    public void unsetName() {
        _Name = null;
    }

    public boolean isExcludeVersioning() {
        if (!has_ExcludeVersioning) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
        } else {
            return _ExcludeVersioning;
        }
    }

    public void setExcludeVersioning(boolean value) {
        _ExcludeVersioning = value;
        has_ExcludeVersioning = true;
    }

    public boolean isSetExcludeVersioning() {
        return has_ExcludeVersioning;
    }

    public void unsetExcludeVersioning() {
        has_ExcludeVersioning = false;
    }

    public java.lang.Integer getAttributetype() {
        return _Attributetype;
    }

    public void setAttributetype(java.lang.Integer value) {
        _Attributetype = value;
    }

    public boolean isSetAttributetype() {
        return (_Attributetype!= null);
    }

    public void unsetAttributetype() {
        _Attributetype = null;
    }

    public java.lang.String getForeignLinkAttributeRule() {
        return _ForeignLinkAttributeRule;
    }

    public void setForeignLinkAttributeRule(java.lang.String value) {
        _ForeignLinkAttributeRule = value;
    }

    public boolean isSetForeignLinkAttributeRule() {
        return (_ForeignLinkAttributeRule!= null);
    }

    public void unsetForeignLinkAttributeRule() {
        _ForeignLinkAttributeRule = null;
    }

    public boolean isFilesystem() {
        if (!has_Filesystem) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
        } else {
            return _Filesystem;
        }
    }

    public void setFilesystem(boolean value) {
        _Filesystem = value;
        has_Filesystem = true;
    }

    public boolean isSetFilesystem() {
        return has_Filesystem;
    }

    public void unsetFilesystem() {
        has_Filesystem = false;
    }

    public com.gentics.lib.datasource.object.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.gentics.lib.datasource.object.jaxb.impl.runtime.UnmarshallingContext context) {
        return new com.gentics.lib.datasource.object.jaxb.impl.AttributetypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.gentics.lib.datasource.object.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_ForeignLinkAttribute!= null) {
            context.startElement("", "foreignlinkattribute");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ForeignLinkAttribute), "ForeignLinkAttribute");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ForeignLinkAttributeRule!= null) {
            context.startElement("", "foreignlinkattributerule");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ForeignLinkAttributeRule), "ForeignLinkAttributeRule");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_QuickName!= null) {
            context.startElement("", "quickname");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _QuickName), "QuickName");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.gentics.lib.datasource.object.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startAttribute("", "attributetype");
        try {
            context.text(((java.lang.Integer) _Attributetype).toString(), "Attributetype");
        } catch (java.lang.Exception e) {
            com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (has_ExcludeVersioning) {
            context.startAttribute("", "excludeVersioning");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ExcludeVersioning)), "ExcludeVersioning");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Filesystem) {
            context.startAttribute("", "filesystem");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Filesystem)), "Filesystem");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Linkedobjecttype!= null) {
            context.startAttribute("", "linkedobjecttype");
            try {
                context.text(((java.lang.Integer) _Linkedobjecttype).toString(), "Linkedobjecttype");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Multivalue) {
            context.startAttribute("", "multivalue");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Multivalue)), "Multivalue");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (has_Optimized) {
            context.startAttribute("", "optimized");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Optimized)), "Optimized");
            } catch (java.lang.Exception e) {
                com.gentics.lib.datasource.object.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.gentics.lib.datasource.object.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.gentics.lib.datasource.object.jaxb.Attributetype.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000!com.sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001ppsq\u0000~\u0000\fppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005v"
+"aluexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datat"
+"ype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#"
+"sq\u0000~\u0000\u000fppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0012xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psq\u0000~\u0000\u0018ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000&q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www."
+"w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0015\u0001q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0014"
+"foreignlinkattributet\u0000\u0000q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~"
+"\u0000\u001bsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0018foreignlinkatt"
+"ributeruleq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001bsq\u0000~\u0000\u000f"
+"ppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\tquicknameq\u0000~\u0000@q\u0000~\u0000<sq\u0000"
+"~\u0000-ppsq\u0000~\u0000\u0018ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype"
+".xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun."
+"msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixed"
+"Z\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd"
+"/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/"
+"ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~\u0000\u001fq\u0000~\u0000@t\u0000\u0010attributetypedef"
+"q\u0000~\u00004\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nb"
+"aseFacetsq\u0000~\u0000Uxq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun.msv.data"
+"type.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.m"
+"sv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000"
+"\u0000xq\u0000~\u0000Tppq\u0000~\u00004\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000at\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000"
+"~\u0000[t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000"
+"\u0000\u0000\u0000\u0000\tsr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001L\u0000\u0005valueq\u0000~\u0000 xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u000210sq\u0000~\u0000gt\u0000"
+"\u00013sq\u0000~\u0000gt\u0000\u00015sq\u0000~\u0000gt\u0000\u00017sq\u0000~\u0000gt\u0000\u00012sq\u0000~\u0000gt\u0000\u00019sq\u0000~\u0000gt\u0000\u00018sq\u0000~\u0000gt\u0000"
+"\u00016sq\u0000~\u0000gt\u0000\u00011xq\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Xq\u0000~\u0000@sq\u0000~\u00006t\u0000\rattributetypeq\u0000~\u0000"
+"@sq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016psq\u0000~\u0000\u0018ppsr\u0000$com.sun.msv.datatype.xsd.Bo"
+"oleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007booleanq\u0000~\u00004q\u0000~\u0000)sq\u0000~\u0000*q\u0000~"
+"\u0000\u0083q\u0000~\u0000#sq\u0000~\u00006t\u0000\u0011excludeVersioningq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~"
+"\u0000\u0016pq\u0000~\u0000\u0080sq\u0000~\u00006t\u0000\nfilesystemq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016psq\u0000"
+"~\u0000\u0018ppq\u0000~\u0000[q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000\\q\u0000~\u0000#sq\u0000~\u00006t\u0000\u0010linkedobjecttypeq\u0000~\u0000"
+"@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000\u0080sq\u0000~\u00006t\u0000\nmultivalueq\u0000~\u0000@q\u0000~\u0000<"
+"sq\u0000~\u0000-ppq\u0000~\u0000\u001bsq\u0000~\u00006t\u0000\u0004nameq\u0000~\u0000@sq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000\u0080sq\u0000~"
+"\u00006t\u0000\toptimizedq\u0000~\u0000@q\u0000~\u0000<sr\u0000\"com.sun.msv.grammar.ExpressionPo"
+"ol\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPo"
+"ol$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Close"
+"dHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun"
+"/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0017\u0001pq\u0000~\u0000~q\u0000~\u0000\u0006q\u0000~\u0000\u0010q\u0000~\u0000Aq\u0000~\u0000"
+"Hq\u0000~\u0000\u000bq\u0000~\u0000\u0091q\u0000~\u0000\u0087q\u0000~\u0000\u0017q\u0000~\u0000Cq\u0000~\u0000Jq\u0000~\u0000\nq\u0000~\u0000\u008bq\u0000~\u0000\u0098q\u0000~\u0000\rq\u0000~\u0000\tq\u0000~\u0000"
+"\u0007q\u0000~\u0000\bq\u0000~\u0000,q\u0000~\u0000Dq\u0000~\u0000Kq\u0000~\u0000\u000eq\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.gentics.lib.datasource.object.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.gentics.lib.datasource.object.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------");
        }

        protected Unmarshaller(com.gentics.lib.datasource.object.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.gentics.lib.datasource.object.jaxb.impl.AttributetypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        attIdx = context.getAttribute("", "linkedobjecttype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "filesystem");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "optimized");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "excludeVersioning");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "attributetype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("quickname" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 26;
                            return ;
                        }
                        if (("foreignlinkattributerule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        if (("foreignlinkattribute" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 24;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "multivalue");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Linkedobjecttype = java.lang.Integer.valueOf(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Filesystem = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Filesystem = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Optimized = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Optimized = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ExcludeVersioning = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ExcludeVersioning = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Attributetype = java.lang.Integer.valueOf(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Multivalue = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Multivalue = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        if (("quickname" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "linkedobjecttype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  23 :
                        if (("foreignlinkattributerule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "filesystem");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "optimized");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "excludeVersioning");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "attributetype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  25 :
                        if (("foreignlinkattribute" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  21 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "multivalue");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("linkedobjecttype" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  6 :
                        if (("filesystem" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        if (("optimized" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  3 :
                        if (("excludeVersioning" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        if (("attributetype" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  21 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        if (("multivalue" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "linkedobjecttype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 12;
                            continue outer;
                        }
                        state = 12;
                        continue outer;
                    case  2 :
                        if (("attributetype" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("excludeVersioning" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "filesystem");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  14 :
                        if (("multivalue" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("filesystem" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        attIdx = context.getAttribute("", "optimized");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 21;
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "excludeVersioning");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "attributetype");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  21 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        attIdx = context.getAttribute("", "multivalue");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText6(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  11 :
                        if (("linkedobjecttype" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("optimized" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText7(v);
                            state = 18;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            attIdx = context.getAttribute("", "linkedobjecttype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 12;
                                continue outer;
                            }
                            state = 12;
                            continue outer;
                        case  24 :
                            eatText8(value);
                            state = 25;
                            return ;
                        case  4 :
                            eatText4(value);
                            state = 5;
                            return ;
                        case  10 :
                            eatText1(value);
                            state = 11;
                            return ;
                        case  26 :
                            eatText9(value);
                            state = 27;
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "filesystem");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  22 :
                            eatText10(value);
                            state = 23;
                            return ;
                        case  19 :
                            eatText3(value);
                            state = 20;
                            return ;
                        case  16 :
                            eatText7(value);
                            state = 17;
                            return ;
                        case  13 :
                            eatText6(value);
                            state = 14;
                            return ;
                        case  18 :
                            attIdx = context.getAttribute("", "optimized");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 21;
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "excludeVersioning");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "attributetype");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  21 :
                            revertToParentFromText(value);
                            return ;
                        case  12 :
                            attIdx = context.getAttribute("", "multivalue");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText6(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  7 :
                            eatText2(value);
                            state = 8;
                            return ;
                        case  1 :
                            eatText5(value);
                            state = 2;
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText7(v);
                                state = 18;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ForeignLinkAttribute = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _QuickName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ForeignLinkAttributeRule = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
