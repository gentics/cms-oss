//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-hudson-16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.04.24 at 01:20:39 CEST 
//


package com.gentics.contentnode.dbcopy.jaxb.impl;

public class JAXBtableTypeImpl implements com.gentics.contentnode.dbcopy.jaxb.JAXBtableType, com.sun.xml.bind.JAXBObject, com.gentics.contentnode.dbcopy.jaxb.impl.runtime.UnmarshallableObject, com.gentics.contentnode.dbcopy.jaxb.impl.runtime.XMLSerializable, com.gentics.contentnode.dbcopy.jaxb.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected java.lang.String _Idcol;
    protected java.lang.String _Restrict;
    protected com.gentics.contentnode.dbcopy.jaxb.JAXBmodificatorsType _Modificators;
    protected boolean has_Exportable;
    protected boolean _Exportable;
    protected java.lang.String _Name;
    protected com.gentics.contentnode.dbcopy.jaxb.JAXBreferencesType _References;
    protected java.lang.String _Id;
    protected com.gentics.contentnode.dbcopy.jaxb.JAXBPropertiesType _Properties;
    public final static java.lang.Class version = (com.gentics.contentnode.dbcopy.jaxb.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.gentics.contentnode.dbcopy.jaxb.JAXBtableType.class);
    }

    public java.lang.String getType() {
        if (_Type == null) {
            return "normal";
        } else {
            return _Type;
        }
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public boolean isSetType() {
        return (_Type!= null);
    }

    public void unsetType() {
        _Type = null;
    }

    public java.lang.String getIdcol() {
        return _Idcol;
    }

    public void setIdcol(java.lang.String value) {
        _Idcol = value;
    }

    public boolean isSetIdcol() {
        return (_Idcol!= null);
    }

    public void unsetIdcol() {
        _Idcol = null;
    }

    public java.lang.String getRestrict() {
        return _Restrict;
    }

    public void setRestrict(java.lang.String value) {
        _Restrict = value;
    }

    public boolean isSetRestrict() {
        return (_Restrict!= null);
    }

    public void unsetRestrict() {
        _Restrict = null;
    }

    public com.gentics.contentnode.dbcopy.jaxb.JAXBmodificatorsType getModificators() {
        return _Modificators;
    }

    public void setModificators(com.gentics.contentnode.dbcopy.jaxb.JAXBmodificatorsType value) {
        _Modificators = value;
    }

    public boolean isSetModificators() {
        return (_Modificators!= null);
    }

    public void unsetModificators() {
        _Modificators = null;
    }

    public boolean isExportable() {
        if (!has_Exportable) {
            return javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("true"));
        } else {
            return _Exportable;
        }
    }

    public void setExportable(boolean value) {
        _Exportable = value;
        has_Exportable = true;
    }

    public boolean isSetExportable() {
        return has_Exportable;
    }

    public void unsetExportable() {
        has_Exportable = false;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public boolean isSetName() {
        return (_Name!= null);
    }

    public void unsetName() {
        _Name = null;
    }

    public com.gentics.contentnode.dbcopy.jaxb.JAXBreferencesType getReferences() {
        return _References;
    }

    public void setReferences(com.gentics.contentnode.dbcopy.jaxb.JAXBreferencesType value) {
        _References = value;
    }

    public boolean isSetReferences() {
        return (_References!= null);
    }

    public void unsetReferences() {
        _References = null;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public boolean isSetId() {
        return (_Id!= null);
    }

    public void unsetId() {
        _Id = null;
    }

    public com.gentics.contentnode.dbcopy.jaxb.JAXBPropertiesType getProperties() {
        return _Properties;
    }

    public void setProperties(com.gentics.contentnode.dbcopy.jaxb.JAXBPropertiesType value) {
        _Properties = value;
    }

    public boolean isSetProperties() {
        return (_Properties!= null);
    }

    public void unsetProperties() {
        _Properties = null;
    }

    public com.gentics.contentnode.dbcopy.jaxb.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.gentics.contentnode.dbcopy.jaxb.impl.runtime.UnmarshallingContext context) {
        return new com.gentics.contentnode.dbcopy.jaxb.impl.JAXBtableTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.gentics.contentnode.dbcopy.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Restrict!= null) {
            context.startElement("", "restrict");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Restrict), "Restrict");
            } catch (java.lang.Exception e) {
                com.gentics.contentnode.dbcopy.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Modificators!= null) {
            context.startElement("", "modificators");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Modificators), "Modificators");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Modificators), "Modificators");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Modificators), "Modificators");
            context.endElement();
        }
        if (_References!= null) {
            context.startElement("", "references");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _References), "References");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _References), "References");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _References), "References");
            context.endElement();
        }
        if (_Properties!= null) {
            context.startElement("", "properties");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Properties), "Properties");
            context.endElement();
        }
    }

    public void serializeAttributes(com.gentics.contentnode.dbcopy.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_Exportable) {
            context.startAttribute("", "exportable");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Exportable)), "Exportable");
            } catch (java.lang.Exception e) {
                com.gentics.contentnode.dbcopy.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Id!= null) {
            context.startAttribute("", "id");
            try {
                context.text(((java.lang.String) _Id), "Id");
            } catch (java.lang.Exception e) {
                com.gentics.contentnode.dbcopy.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Idcol!= null) {
            context.startAttribute("", "idcol");
            try {
                context.text(((java.lang.String) _Idcol), "Idcol");
            } catch (java.lang.Exception e) {
                com.gentics.contentnode.dbcopy.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            com.gentics.contentnode.dbcopy.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Type!= null) {
            context.startAttribute("", "type");
            try {
                context.text(((java.lang.String) _Type), "Type");
            } catch (java.lang.Exception e) {
                com.gentics.contentnode.dbcopy.jaxb.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.gentics.contentnode.dbcopy.jaxb.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.gentics.contentnode.dbcopy.jaxb.JAXBtableType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000!com."
+"sun.msv.grammar.InterleaveExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\nppsq\u0000~"
+"\u0000\nppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'"
+"com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameCla"
+"sst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar."
+"ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontent"
+"Modelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p"
+"\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fL"
+"org/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/s"
+"un/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd."
+"StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatyp"
+"e.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.x"
+"sd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDat"
+"atypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\bt"
+"ypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteS"
+"paceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006string"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u0000#q\u0000~\u0000\"sq\u0000~\u0000\u000epp"
+"sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000"
+"\tnameClassq\u0000~\u0000\u0011xq\u0000~\u0000\u0003q\u0000~\u0000\u0015psq\u0000~\u0000\u0017ppsr\u0000\"com.sun.msv.datatype."
+"xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t\u0000\u0005QNamesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~"
+"\u0000(sq\u0000~\u0000)q\u0000~\u00001q\u0000~\u0000\"sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxr\u0000\u001dcom.sun.msv"
+".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0014\u0001q\u0000~\u0000;sq\u0000~\u00005t\u0000\brestrict"
+"t\u0000\u0000q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\u000eppsr\u0000 co"
+"m.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gra"
+"mmar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0015psq\u0000~\u0000,q\u0000~\u0000\u0015ps"
+"r\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000<q\u0000~\u0000Jsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00006q\u0000~\u0000;sq\u0000~\u00005t\u00008com.gentics.contentnode.dbcopy.ja"
+"xb.JAXBmodificatorsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy"
+"-elementssq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\fmodific"
+"atorsq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000\u0010q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\u000ep"
+"psq\u0000~\u0000Eq\u0000~\u0000\u0015psq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000Jq\u0000~\u0000Lq\u0000~\u0000;sq\u0000~\u00005t\u00006com.gentics"
+".contentnode.dbcopy.jaxb.JAXBreferencesTypeq\u0000~\u0000Osq\u0000~\u0000\u000eppsq\u0000~"
+"\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;sq\u0000~\u00005t\u0000\nreferencesq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000epp"
+"sq\u0000~\u0000\u0010q\u0000~\u0000\u0015p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010pp\u0000sq\u0000~\u0000\u000eppsq\u0000~\u0000Eq\u0000~\u0000\u0015psq\u0000~\u0000,q\u0000~\u0000"
+"\u0015pq\u0000~\u0000Jq\u0000~\u0000Lq\u0000~\u0000;sq\u0000~\u00005t\u00006com.gentics.contentnode.dbcopy.jax"
+"b.JAXBPropertiesTypeq\u0000~\u0000Osq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000.q\u0000~\u00007q\u0000~\u0000;"
+"sq\u0000~\u00005t\u0000\npropertiesq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015psq\u0000~\u0000\u0017ppsr\u0000"
+"$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\"t"
+"\u0000\u0007booleanq\u0000~\u00003q\u0000~\u0000(sq\u0000~\u0000)q\u0000~\u0000sq\u0000~\u0000\"sq\u0000~\u00005t\u0000\nexportableq\u0000~\u0000?q"
+"\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015psq\u0000~\u0000\u0017ppsr\u0000\"com.sun.msv.datatype.xsd"
+".TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000\"t\u0000\u0005tokenq\u0000~\u00003\u0001q\u0000~\u0000(sq\u0000~\u0000)q\u0000~"
+"\u0000|q\u0000~\u0000\"sq\u0000~\u00005t\u0000\u0002idq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000\u000eppsq\u0000~\u0000,q\u0000~\u0000\u0015pq\u0000~\u0000ysq\u0000~\u00005t"
+"\u0000\u0005idcolq\u0000~\u0000?q\u0000~\u0000;sq\u0000~\u0000,ppq\u0000~\u0000ysq\u0000~\u00005t\u0000\u0004nameq\u0000~\u0000?sq\u0000~\u0000\u000eppsq\u0000~"
+"\u0000,q\u0000~\u0000\u0015psq\u0000~\u0000\u0017ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFace"
+"t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datat"
+"ype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.s"
+"un.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFi"
+"xedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/"
+"xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/x"
+"sd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u001fxq\u0000~\u0000\u001eq\u0000~\u0000?pq\u0000~\u00003\u0000\u0000q\u0000~\u0000{q\u0000~"
+"\u0000{t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000"
+"\u0000\u0000\u0000\u0002t\u0000\u0006normalt\u0000\u0005crossxq\u0000~\u0000(sq\u0000~\u0000)t\u0000\rtoken-derivedq\u0000~\u0000?sq\u0000~\u00005"
+"t\u0000\u0004typeq\u0000~\u0000?q\u0000~\u0000;sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clos"
+"edHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j"
+"\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gr"
+"ammar/ExpressionPool;xp\u0000\u0000\u0000\u001e\u0001pq\u0000~\u0000Dq\u0000~\u0000Xq\u0000~\u0000@q\u0000~\u0000Tq\u0000~\u0000eq\u0000~\u0000aq"
+"\u0000~\u0000nq\u0000~\u0000\u0007q\u0000~\u0000+q\u0000~\u0000Pq\u0000~\u0000]q\u0000~\u0000jq\u0000~\u0000\u000bq\u0000~\u0000\bq\u0000~\u0000\u000fq\u0000~\u0000\u0016q\u0000~\u0000\u0005q\u0000~\u0000wq"
+"\u0000~\u0000Gq\u0000~\u0000Yq\u0000~\u0000fq\u0000~\u0000\rq\u0000~\u0000\fq\u0000~\u0000\tq\u0000~\u0000Bq\u0000~\u0000Vq\u0000~\u0000cq\u0000~\u0000\u0080q\u0000~\u0000\u0087q\u0000~\u0000\u0006x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.gentics.contentnode.dbcopy.jaxb.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.gentics.contentnode.dbcopy.jaxb.impl.runtime.UnmarshallingContext context) {
            super(context, "------------------------");
        }

        protected Unmarshaller(com.gentics.contentnode.dbcopy.jaxb.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.gentics.contentnode.dbcopy.jaxb.impl.JAXBtableTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        if (("modificator" == ___local)&&("" == ___uri)) {
                            _Modificators = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl) spawnChildFromEnterElement((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Modificators = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl) spawnChildFromEnterElement((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl.class), 17, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  15 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        if (("references" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("modificators" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("restrict" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  20 :
                        if (("ref" == ___local)&&("" == ___uri)) {
                            _References = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl) spawnChildFromEnterElement((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _References = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl) spawnChildFromEnterElement((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl.class), 21, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "idcol");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "exportable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        if (("property" == ___local)&&("" == ___uri)) {
                            _Properties = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBPropertiesTypeImpl) spawnChildFromEnterElement((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBPropertiesTypeImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Idcol = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Exportable = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Exportable = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        _Modificators = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl) spawnChildFromLeaveElement((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  23 :
                        if (("restrict" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("modificators" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  20 :
                        _References = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl) spawnChildFromLeaveElement((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "idcol");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "exportable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  19 :
                        if (("properties" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("references" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  12 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        _Modificators = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl) spawnChildFromEnterAttribute((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  20 :
                        _References = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl) spawnChildFromEnterAttribute((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        if (("idcol" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        if (("exportable" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  16 :
                        _Modificators = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl) spawnChildFromLeaveAttribute((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("exportable" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  20 :
                        _References = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl) spawnChildFromLeaveAttribute((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "idcol");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 9;
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  5 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("idcol" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "exportable");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText3(v);
                            state = 12;
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "id");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText4(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText5(v);
                            state = 15;
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  14 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  22 :
                            eatText6(value);
                            state = 23;
                            return ;
                        case  16 :
                            _Modificators = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl) spawnChildFromText((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBmodificatorsTypeImpl.class), 17, value));
                            return ;
                        case  7 :
                            eatText1(value);
                            state = 8;
                            return ;
                        case  10 :
                            eatText3(value);
                            state = 11;
                            return ;
                        case  13 :
                            eatText5(value);
                            state = 14;
                            return ;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  20 :
                            _References = ((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl) spawnChildFromText((com.gentics.contentnode.dbcopy.jaxb.impl.JAXBreferencesTypeImpl.class), 21, value));
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "idcol");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 9;
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  4 :
                            eatText4(value);
                            state = 5;
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "exportable");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  9 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText3(v);
                                state = 12;
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "id");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText4(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText5(v);
                                state = 15;
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Restrict = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
