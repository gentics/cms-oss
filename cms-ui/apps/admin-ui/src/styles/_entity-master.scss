@import 'variables';

.gtx-entity-master-component {
    display: block;
    height: 100%;
    width: 100%;
}

.gtx-entity-master {
    .entity-table {
        display: flex;
        height: 100%;
        height: 100%;
        flex-direction: column;
    }

    .flex-container {
        &.gtx-actions-common {
            justify-content: flex-start;

            gtx-button {
                margin-right: 5px;

                &.gtx-icon-only icon {
                    font-size: 24px;
                    color: $gtx-color-light-gray;
                    transition: color 0.3s ease-in-out;

                    &:hover {
                        color: $gtx-color-very-dark-gray;
                    }
                }
            }
        }
    }

    > .gtx-component {
        display: block;
        height: 100%;
        width: 100%;
    }
}

.gtx-entity-master-loading-text {
    position: absolute;
    z-index: 3;
    width: 100%;
    top: 35vh;
    text-align: center;
    font-size: $gtx-font-size-lead;
    color: $gtx-color-dark-gray;
}

// hide columns with [allowHiding]="false" in DxGrid ColumnChooser
.dx-checkbox.dx-state-readonly, .dx-checkbox.dx-state-disabled {
    display: none;
}

.gtx-modal-datagrid .dx-datagrid .dx-row > td,
.gtx-modal-datagrid .gtx-dx-datagrid-cellbuttons .dx-datagrid .dx-data-row > td:last-child,
.gtx-modal-datagrid .dx-datagrid-headers .dx-datagrid-table .dx-row > td:last-child + td,
.gtx-modal-datagrid .dx-treelist .dx-row > td,
.gtx-modal-datagrid .dx-treelist .dx-data-row > td:last-child {
    padding-top: 10px;
    padding-bottom: 10px;
}

// DATA GRID ADAPTIONS

.gtx-dx-datagrid,
.gtx-dx-treelist {
    max-width: 100%;

    $duration-anim-expand: 0.2s;
    $duration-anim-collapse: 0.6s;
    $style-anim: linear;

    .dx-datagrid-header-panel {
        padding: 0 0 0 24px;
    }

    .dx-row.dx-data-row:first-child {
        border-top: none !important;
    }

    .dx-treelist-icon-container.dx-editor-inline-block .dx-checkbox {
        top: auto;
        margin-top: auto;
    }

    .dx-treelist-rowsview {
        border-bottom: 1px solid #e0e0e0 !important;
        .dx-treelist-table-fixed .dx-treelist-icon-container {
            padding-top: 0.4rem;
        }
    }

    .dx-datagrid-content .dx-datagrid-table .dx-row > td:first-of-type {
        padding-left: 10px !important;
    }

    .disabledCheckBox {
        opacity: 0.2;
        pointer-events: none;
    }

    .dx-datagrid-pager.dx-pager {
        display: flex;
        align-items: center;
        flex-direction: column;
        width: 100%;
        padding-top: 0;
    }

    .dx-treelist-headers {
        border-bottom: 1px solid $gtx-tabs-active-border-color;
    }
    .dx-treelist-icon-container.dx-editor-inline-block {
        padding: 4px 32px 4px 4px;
    }

    // custom class
    .dx-row.gtx-dx-datagrid-row-active, .dx-row.gtx-dx-datagrid-row-selected {
        .dx-button, .dx-menu {
            .material-icons {
                font-size: 1rem;
                color: $gtx-color-dark-gray;
            }
        }
    }

    // custom class
    .dx-row.gtx-dx-datagrid-row-active {
        background-color: $gtx-tabs-active-border-color-bg;
    }

    // custom class
    .dx-row.gtx-dx-datagrid-row-selected {
        background-color: #0096dc2a;
    }

    .dx-freespace-row, .dx-freespace-row * {
        border: none !important;
    }

    // IF COLLAPSABLE - DATA GRID
    &.gtx-dx-datagrid-is-collapsable {
        .dx-datagrid-headers .dx-datagrid-content .dx-datagrid-table,
        .dx-treelist-headers .dx-treelist-content .dx-treelist-table {
            .dx-header-row td:not(:first-child):not(:nth-child(2)):not(:last-child),
            .dx-datagrid-filter-row td:not(:first-child):not(:nth-child(2)) {
                @media screen and (min-width: $large-screen) {
                    transition: width $duration-anim-collapse $style-anim;
                }
            }
        }

        .dx-datagrid-rowsview .dx-datagrid-content .dx-datagrid-table {
            .dx-freespace-row td:not(:first-child):not(:nth-child(2)):not(:last-child),
            .dx-data-row td:not(:first-child):not(:nth-child(2)):not(:last-child) {
                transition: width $duration-anim-collapse $style-anim;
            }
        }

        &.gtx-dx-datagrid-state-collapsed {
            .dx-datagrid-headers .dx-datagrid-content .dx-datagrid-table,
            .dx-treelist-headers .dx-treelist-content .dx-treelist-table {
                .dx-header-row td:not(:first-child):not(:nth-child(2)):not(:last-child) {
                    @media screen and (min-width: $large-screen) {
                        width: 0 !important;
                    }
                }
                .dx-datagrid-filter-row td:not(:first-child):not(:nth-child(2)) {
                    @media screen and (min-width: $large-screen) {
                        width: 0 !important;
                        visibility: hidden;
                    }
                }
            }

            .dx-datagrid-rowsview .dx-datagrid-content .dx-datagrid-table {
                .dx-freespace-row td:not(:first-child):not(:nth-child(2)):not(:last-child),
                .dx-data-row td:not(:first-child):not(:nth-child(2)):not(:last-child) {
                    @media screen and (min-width: $large-screen) {
                        width: 0 !important;
                    }
                }
            }
        }
    }

    // IF COLLAPSABLE - TREE LIST
    &.gtx-dx-treelist-is-collapsable {
        .dx-treelist-headers .dx-treelist-content .dx-treelist-table {
            .dx-header-row td:not(:first-child):not(:last-child) {
                @media screen and (min-width: $large-screen) {
                    transition: width $duration-anim-collapse $style-anim;
                }
            }
        }

        .dx-treelist-rowsview .dx-treelist-content .dx-treelist-table {
            .dx-freespace-row td:not(:first-child):not(:last-child),
            .dx-data-row td:not(:first-child):not(:last-child) {
                @media screen and (min-width: $large-screen) {
                    transition: width $duration-anim-collapse $style-anim;
                }
            }
        }

        &.gtx-dx-treelist-state-collapsed {
            .dx-treelist-headers .dx-treelist-content .dx-treelist-table {
                .dx-header-row td:not(:first-child):not(:last-child) {
                    @media screen and (min-width: $large-screen) {
                        width: 0 !important;
                        font-size: 0;
                    }
                }
            }

            .dx-treelist-rowsview .dx-treelist-content .dx-treelist-table {
                .dx-freespace-row td:not(:first-child):not(:last-child),
                .dx-data-row td:not(:first-child):not(:last-child) {
                    @media screen and (min-width: $large-screen) {
                        width: 0 !important;
                        font-size: 0;
                    }
                }
            }
        }

    }

}

.gtx-dx-treegrid-actions-wrapper {
    width: 100%;
}

.gtx-dx-treegrid-actions {
    text-transform: uppercase;
}

// for DxDataGrid inside gtx-dynamic-modal
.gtx-modal-datagrid, .gtx-modal-datagrid-in-tab {

    display: flex;
    flex-direction: column;
    max-height: 80vh;

    .gtx-modal-datagrid-search-bar-container {
        width: 100%;

        gtx-search-bar {
            width: 100%;
        }

        .flex-container {
            margin-bottom: 0;
        }
    }

    .gtx-modal-datagrid-container {
        display: flex;
        flex: 0 1 auto;
        min-height: 1px;
        width: 100%;

        > .gtx-entity-master-component {
            flex: 1 1 auto;
            height: auto;
        }
    }

    .dx-datagrid, .dx-treelist, .dx-treelist-container {
        background-color: #fafafa;
    }
}

.gtx-modal-datagrid-in-tab {
    overflow-y: auto;
    max-height: 100vh;

    .modal-content {
        overflow-x: hidden;
    }

    .modal-content {
        max-width: 100%; // ensure that gtx-tab's 100% width matches width of modal-content's parent
    }

    ::ng-deep gtx-tabs {
        overflow-x: hidden;
    }
}

.gtx-modal-datagrid {
    .modal-content {
        flex: 0 1 auto;
        min-height: 1px;
        display: flex;
        overflow: hidden;
        flex-direction: column;
    }
}
