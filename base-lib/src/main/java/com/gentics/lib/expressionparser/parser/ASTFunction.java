/* Generated By:JJTree: Do not edit this line. ASTFunction.java */

package com.gentics.lib.expressionparser.parser;

import com.gentics.api.lib.expressionparser.ExpressionParserException;
import com.gentics.api.lib.expressionparser.filtergenerator.DatasourceFilter;
import com.gentics.api.lib.expressionparser.functions.Function;
import com.gentics.lib.expressionparser.functions.AbstractFunctionRegistry.FunctionStore;

public class ASTFunction extends FunctionNode {
	protected String name;

	public ASTFunction(int id) {
		super(id);
	}

	public ASTFunction(Parser p, int id) {
		super(p, id);
	}

	public void setName(String name) {
		this.name = name;
	}

	public String toString() {
		return "Function " + name;
	}

	protected Function getFunction(FunctionStore store) {
		return store.getNamedFunction(name);
	}

	protected int getType() {
		return Function.TYPE_NAMEDFUNCTION;
	}

	/* (non-Javadoc)
	 * @see com.gentics.lib.expressionparser.parser.FunctionNode#getReadableFunctionName()
	 */
	protected String getReadableFunctionName() {
		// overwritten to prepend the name of the named function
		return super.getReadableFunctionName() + " " + name;
	}
    
	/* (non-Javadoc)
	 * @see com.gentics.api.lib.expressionparser.EvaluableExpression#allowsNullValues(com.gentics.api.lib.expressionparser.filtergenerator.DatasourceFilter)
	 */
	public boolean allowsNullValues(DatasourceFilter filter) throws ExpressionParserException {
		return true;
	}
}
