services:
  mariadb:
    extends:
      file: docker-compose.yml
      service: mariadb

  mesh:
    extends:
      file: docker-compose.yml
      service: mesh
    environment:
      LICENSEKEY: "${CI_LICENSEKEY}"

  cms:
    extends:
      file: docker-compose.yml
      service: cms
    image: docker.apa-it.at/gentics/cms:${CI_CMS_VERSION:-6.1.6}

    environment:
      ELASTICSEARCH_ENABLED: "false" # Disabled until ES 8 compat is ready
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      LICENSEKEY: "${CI_LICENSEKEY}"

    volumes:
      - ./integration-test/cms/ui-conf:/cms/ui-conf

    extra_hosts:
      - "keycloak.localhost.gentics.com:host-gateway"

    depends_on:
      mariadb:
        condition: service_healthy
      mesh:
        condition: service_healthy
      keycloak:
        condition: service_healthy
      # elasticsearch:
      #   condition: service_healthy
      web:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.2
    command: start-dev --import-realm
    ports:
      - 8180:8080

    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      KC_HEALTH_ENABLED: "true"
      KC_DB: mariadb
      KC_DB_URL: jdbc:mariadb://mariadb/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak

    volumes:
      - ./integration-test/keycloak:/opt/keycloak/data/import

    depends_on:
      mariadb:
        condition: service_healthy

    healthcheck:
      # Really stupid health check because the keycloak image doesn't contain curl nor wget
      # https://stackoverflow.com/a/78229437
      test: [
        "CMD-SHELL",
        'exec 3<>/dev/tcp/localhost/8080; echo -e "GET /health/ready HTTP/1.1\nhost: localhost:8080\n" >&3; timeout --preserve-status 1 cat <&3 | grep -m 1 status | grep -m 1 UP; ERROR=$?; exec 3<&-; exec 3>&-; exit $ERROR'
      ]
      start_period: 60s
      # start_interval: 10s
      interval: 60s
      timeout: 10s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    ports:
      - 9200:9200

    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cat/health"]
      start_period: 30s
      # start_interval: 10s
      interval: 60s
      timeout: 30s
      retries: 3

  web:
    image: nginx:1.27.1-alpine
    ports:
      - "80:80"

    volumes:
      - ./integration-test/web/conf.d:/etc/nginx/conf.d:ro

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      start_period: 10s
      # start_interval: 5s
      interval: 60s
      timeout: 10s
      retries: 3
