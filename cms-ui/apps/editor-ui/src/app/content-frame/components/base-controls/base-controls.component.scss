@import 'variables';

@mixin format-element {
    display: inline-block;
    border: none;
    background: $gtx-color-light-gray;
    color: $gtx-color-off-black;
    box-shadow: rgba(0, 0, 0, 0.14) 0px 2px 2px 0;
    border-radius: 3px;
    text-align: center;

    width: 20px;
    height: 20px;
    padding: 0.25rem;
    margin: 0.25rem;
    box-sizing: content-box;
    font-size: 20px;
    transition: 300ms;

    &:hover:not(.no-hover):not(:disabled) {
        background: darken($gtx-color-light-gray, 10%);
        cursor: pointer;
    }
}

.format-section {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    border: 1px solid $gtx-color-mid-gray;
    margin: 0.25rem;
    padding: 0.25rem;
    height: 3rem;
    flex: 0 0;
    align-items: center;
    margin-top: 0;
}

.format-button {
    @include format-element;

    position: relative;

    icon, .button-icon {
        width: 20px;
        height: 20px;
        font-size: inherit;
        color: inherit;
    }

    .format-button-badge {
        position: absolute;
        top: 0;
        right: 0;
        font-size: 0.6rem;
        background: $gtx-color-alert;
        padding: 0.2rem 0.25rem;
        border-radius: 5px;
        margin-top: -25%;
        margin-right: -20%;
        color: $gtx-color-off-white;
    }

    &.active {
        color: $gtx-color-primary;
        background: darken($gtx-color-light-gray, 5%);

        &:hover {
            background: darken($gtx-color-light-gray, 15%);
        }
    }

    &.off-icon {
        icon::before {
            display: inline-block;
            content: attr(data-icon-on);
        }

        /*
            Special "off" styling for icons which do not have a off version like `link` and `link_off` have.
            This mimics it as good as I can get it to work in a reasonable time.
            If a proper off-version of the icon exists, please use that instead.
        */
        icon:not([data-icon-off]),
        icon[data-icon-off=""] {
            position: relative;

            &::after {
                content: '\e15b';
                display: none;
                position: absolute;
                left: -11px;
                top: -10px;
                font-size: 2em;
                transform: rotate(45deg);
                font-variation-settings: "FILL" 1, 'wght' 200;
                text-shadow: 0px -2px 1px darken($gtx-color-very-light-gray, 15%);
            }
        }

        &.active:not(:disabled):hover,
        &.active:not(:disabled):focus {
            color: $gtx-color-alert;

            icon[data-icon-off]:not([data-icon-off=""]) {
                &::before {
                    content: attr(data-icon-off);
                }
            }

            icon:not([data-icon-off]),
            icon[data-icon-off=""] {
                content: attr(data-icon-on);

                &::before,
                &::after {
                    display: inline-block;
                }
            }
        }
    }

    &:disabled {
        background: $gtx-color-very-light-gray;
        color: $gtx-color-mid-gray;
        cursor: not-allowed;
    }
}

.vertical-separator {
    width: 1px;
    height: 100%;
    margin: 0 0.5rem;
    padding: 0.5rem 0;

    &::before {
        width: 1px;
        height: 100%;
        content: '';
        display: inline-block;
        background: $gtx-color-dark-gray;
    }
}
