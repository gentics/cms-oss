import * as Mousetrap from 'mousetrap';
import { DebugToolService } from '../../../../development/providers/debug-tool.service';
import { CNIFrameDocument, CNWindow } from '../../../models/content-frame';

/**
 * This script will be executed once when the IFrame calls GCMSUI.runPreLoadScript().
 * This happens when `DOMContentLoaded` is fired inside the IFrame, but before the assets
 * of the iframe have loaded. Therefore, it is not safe to do DOM manipulations here on elements which
 * get dynamically generated by the iframe's JavaScripts.
 *
 * Operations which do not rely on potentially-generated DOM should go here, since they will get executed much
 * earlier.
 */
export class PreLoadScript {

    constructor(
        private iFrameWindow: CNWindow,
        private iFrameDocument: CNIFrameDocument,
    ) { }

    run(): void {
        this.bindExternalDebugHotkey();
        this.removeAlohaUnloadLogic();
    }

    /** Add Debug Tool hotkey access to iframe */
    bindExternalDebugHotkey(): void {
        const mousetrapListener = new Mousetrap(this.iFrameDocument as any);
        mousetrapListener.bind(DebugToolService.hotkey, (event) => {
            if (event.preventDefault) {
                event.preventDefault();
            } else {
                event.returnValue = false;
            }

            this.iFrameWindow.GCMSUI.callDebugTool();
            return false;
        });
    }

    /**
     * Override the Alohapage onbeforeunload handler, our method of
     * checking whether a confirmation needs to be displayed is superior.
     */
    removeAlohaUnloadLogic(): void {
        this.iFrameWindow.onbeforeunload = () => { /* Noop */};
    }
}
